name: Production release

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  IMAGE: project-vxy-image
  DEPLOYMENT_NAME: kube-ex1-02
  NAMESPACE: project-vxy
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}

jobs:
  go-production:
    name: Build, publish and deploy
    runs-on: ubuntu-latest
    environment: kube-course

    steps:
      # Set environment for jobs and triggers
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          service_account: ${{ secrets.GKE_SA }}
          credentials_json: ${{ secrets.GKE_SA_CREDENTIALS }}

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: 'kube-course'
          location: 'europe-north1-b'

      - name: Docker auth with GCR
        env:
          credentials_json: ${{ secrets.GKE_SA_CREDENTIALS }}
        run: |
          echo "${credentials_json}" | docker login -u _json_key --password-stdin https://eu.gcr.io

      # Install SOPS
      - name: Install SOPS
        env:
          SOPS_VERSION: v3.7.3
        run: |
          LOCAL_BIN=$GITHUB_WORKSPACE/bin
          mkdir -p $LOCAL_BIN
          echo $LOCAL_BIN >> $GITHUB_PATH

          SOPS_BIN="$LOCAL_BIN/sops"
          echo "SOPS_BIN: $SOPS_BIN"
          sudo curl -sfL -o "${SOPS_BIN}" "https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux"
          sudo chmod +x $SOPS_BIN

      # Decrypt secret
      - name: Decrypt secret
        env:
          ENCRYPTED_FILE: ./manifests/database/secret.enc.yml
          DECRYPTED_FILE: ./manifests/database/secret.yml
        run: |
          sops --decrypt $ENCRYPTED_FILE > $DECRYPTED_FILE

      # Build image
      - name: Build
        run: |-
          docker build --tag "eu.gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" .

      # Push image to Google Container Registry
      - name: Push
        run: |-
          docker push "eu.gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1.6.1

      # Follow kustomize blueprint to initialize the setup
      # Deploy image to the GKE cluster
      - name: Deploy
        run: |-
          kustomize edit set image $IMAGE=eu.gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $DEPLOYMENT_NAME -n $NAMESPACE
          kubectl get services -n $NAMESPACE -o wide